---
layout: post
title:      "My first major project (stocks-cli-app)"
date:       2018-07-08 17:15:22 +0000
permalink:  my_first_major_project_stocks-cli-app
---


This was my first Flatiron assignment where I was given pretty much complete freedom to build an application. I saw the examples of movies, and restaurants, and decided to do something a little different: stocks! The beginning was arguably the hardest. I was faced with a blank slate, and had no idea where to start. Luckily, I was able to follow the lesson's guide video and create a structure that I could build and work off of. The logic of coding and the syntax needed came pretty easily to me (after all, this is the end of the Ruby section). However, while my code worked, it definitely was not refined. I went through many iterations of how I wanted my application to be coded, and I'm sure that my current version is still far from perfect code. The major obstacle I faced during this project was the scraping part(which happens to be the focal point of the project). When I tried to scrape information off of Stocktwits' website, I discovered that my Nokogiri searches returned empty arrays! I struggled for a very long, unreasonably long time, going through the basic Nokogiri tutorial videos, checking my searches, trying everything to try and get the information that was clearly there when I inspected the website. After much googling around, I discovered that "Parsers, like Nokogiri, are NOT browsers, and don't care about embedded scripts because, in the HTML, a script is merely text inside a particular tag, and, as a result, that secondary HTML you want is never retrieved" (quoted from StackOverflow). After that, I looked for a stocktwits api and what do you know- it gave me the information I needed! Except, that information was hidden within a huge block of text, and I had to go through regex tutorial videos to figure out how to extract what I wanted. Overall, I learned a lot during my struggles with this project, and learned about topics that I hadn't even expected to encounter!
